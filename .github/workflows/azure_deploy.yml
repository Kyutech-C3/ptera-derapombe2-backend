name: Linux Container deploy Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Make env file
      uses: SpicyPizza/create-envfile@v1.3
      with:
        some_other_variable: foobar
        directory: .
        file_name: .env
        fail_on_empty: false
        envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}

    - name: Create cred.json
      run: |
        mv base_cred.json cred.json

    - name: Edit cred.json
      uses: microsoft/variable-substitution@v1
      with:
        files: 'cred.json'
      env:
        type: ${{ secrets.CRED_JSON_TYPE }}
        project_id: ${{ secrets.CRED_JSON_PROJECT_ID }}
        private_key_id: ${{ secrets.CRED_JSON_PRIVATE_KEY_ID }}
        private_key: ${{ secrets.CRED_JSON_PRIVATE_KEY }}
        client_email: ${{ secrets.CRED_JSON_CLIENT_EMAIL }}
        client_id: ${{ secrets.CRED_JSON_CLIENT_ID }}
        auth_uri: ${{ secrets.CRED_JSON_AUTH_URI }}
        token_uri: ${{ secrets.CRED_JSON_TOKEN_URI }}
        auth_provider_x509_cert_url: ${{ secrets.CRED_JSON_AUTH_PROVIDER }}
        client_x509_cert_url: ${{ secrets.CRED_JSON_CLIENT }}

    - uses: azure/docker-login@v1
      with:
        login-server: signgress.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build . --platform linux/amd64 -t signgress.azurecr.io/sign-gress-server:${{ github.sha }}
        docker push signgress.azurecr.io/sign-gress-server:${{ github.sha }}
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'sign-gress-server'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: 'signgress.azurecr.io/sign-gress-server:${{ github.sha }}'

    - uses: sarisia/actions-status-discord@v1
      if: always()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        status: ${{ job.status }}
